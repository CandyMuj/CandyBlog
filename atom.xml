<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CandyMuj的个人博客</title>
  
  <subtitle>一个咸鱼的梦想博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.candymuj.cc/"/>
  <updated>2019-03-03T09:26:16.871Z</updated>
  <id>https://blog.candymuj.cc/</id>
  
  <author>
    <name>Muj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何优雅的使用VS Code-常用快捷键及技巧</title>
    <link href="https://blog.candymuj.cc/2019/03/03/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E4%BD%BF%E7%94%A8VS-Code-%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%8F%8A%E6%8A%80%E5%B7%A7/"/>
    <id>https://blog.candymuj.cc/2019/03/03/如何优雅的使用VS-Code-常用快捷键及技巧/</id>
    <published>2019-03-03T09:26:16.000Z</published>
    <updated>2019-03-03T09:26:16.871Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>超简单就学会使用Git与GitHub仓库 常用命令及操作 回滚</title>
    <link href="https://blog.candymuj.cc/2019/02/26/%E8%B6%85%E7%AE%80%E5%8D%95%E5%B0%B1%E5%AD%A6%E4%BC%9A%E4%BD%BF%E7%94%A8Git%E4%B8%8EGitHub%E4%BB%93%E5%BA%93-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E5%8F%8A%E6%93%8D%E4%BD%9C-%E5%9B%9E%E6%BB%9A/"/>
    <id>https://blog.candymuj.cc/2019/02/26/超简单就学会使用Git与GitHub仓库-常用命令及操作-回滚/</id>
    <published>2019-02-26T10:58:00.000Z</published>
    <updated>2019-02-26T15:15:59.034Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用NodeJs+Hexo+GitHub搭建属于自己的个人博客 及后续关于hexo的设置、美化和扩展</title>
    <link href="https://blog.candymuj.cc/2019/02/26/%E4%BD%BF%E7%94%A8NodeJs-Hexo-GitHub%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-%E5%8F%8A%E5%90%8E%E7%BB%AD%E5%85%B3%E4%BA%8Ehexo%E7%9A%84%E8%AE%BE%E7%BD%AE%E3%80%81%E7%BE%8E%E5%8C%96%E5%92%8C%E6%89%A9%E5%B1%95/"/>
    <id>https://blog.candymuj.cc/2019/02/26/使用NodeJs-Hexo-GitHub搭建属于自己的个人博客-及后续关于hexo的设置、美化和扩展/</id>
    <published>2019-02-26T10:57:00.000Z</published>
    <updated>2019-03-03T16:36:07.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li><a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git</a></li></ul><blockquote><p>安装就不多说了，到官网下载直接就好了</p></blockquote><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><blockquote><p>针对刚刚安装的两个软件进行一些配置，其中有些配置是可选的</p><p><strong>注意：后续的一切操作，都是在已经安装上诉两个软件的前提下进行的</strong></p></blockquote><p><span id="id4"></span></p><h3 id="自定义Nodejs-npm命令下载模块的默认保存路径（可选）"><a href="#自定义Nodejs-npm命令下载模块的默认保存路径（可选）" class="headerlink" title="自定义Nodejs npm命令下载模块的默认保存路径（可选）"></a>自定义Nodejs npm命令下载模块的默认保存路径（可选）</h3><blockquote><p>因为默认是下载在c盘的，为了避免C盘被滥用，可自定义保存路径，当然也可以不改，只要你愿意</p></blockquote><a id="more"></a><ol><li><p><strong>查看电脑当前npm的安装路径</strong><br> 使用cmd命令查询 <code>npm config ls</code><br> <img src="/images/Snipaste_2019-03-03_17-12-55.png" alt="执行结果"></p><blockquote><p>红框处 <code>prefix</code> 就是配置的路径<br>由于我已经设置过了，所以这里显示的不是C盘<br>默认路径一般为：C:\Users\用户名\AppData\Roaming\npm</p></blockquote></li><li><p><strong>开始配置</strong></p><ol><li><p><strong>在你想要保存的地方新建两个文件夹</strong> <code>node_cache</code>、<code>node_global_modules</code></p><blockquote><p>文件名可以随意，但是为了方便区分和吼记按照一定格式来吧<br><code>node_cache</code>：缓存目录<br><code>node_global_modules</code>：模块下载目录</p></blockquote><p> <img src="/images/Snipaste_2019-03-03_17-32-08.png" alt="新建用于存储的文件夹"></p></li><li><p><strong>在cmd中执行命令</strong></p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix "H:\Data Files\Nodejs\npm\node_global_modules"</span><br><span class="line">npm config set cache "H:\Data Files\Nodejs\npm\node_cache"</span><br></pre></td></tr></table></figure></li><li><p><strong>配置系统环境变量</strong><br><em>新增系统环境变量：</em></p><ul><li><code>NODE_HOME</code>=<code>H:\Data Files\Nodejs\npm\node_global_modules</code></li></ul><p><em>在path中追加变量：</em></p><ul><li><code>%NODE_HOME%\</code></li><li><code>%NODE_HOME%\node_modules</code></li></ul></li></ol></li><li><p><strong>测试配置是否生效</strong><br> <em>法一：执行之前的cmd查询命令，查看配置是否更改为预想的路径 <code>npm config ls</code></em><br> <img src="/images/Snipaste_2019-03-03_18-07-31.png" alt="我预期的结果"></p><blockquote><p>我配置的缓存和保存目录，都是我预期中的结果 (o゜▽゜)o☆[BINGO!]</p></blockquote><p> <em>法二：尝试下载一个模块，查看在新建的目录中是否存在</em><br> 重新打开一个cmd命令行，执行安装命令, 安装后打开设置的安装路径中的 node_global_modules 目录，如果目录文件夹中的结构如下，则表示成功<br> <img src="/images/Snipaste_2019-03-03_18-17-11.png" alt="会自动生成文件夹"></p><blockquote><p>安装命令请看后方的 安装hexo插件部分<a href="#id3">跳转至如何使用安装命令</a></p></blockquote></li></ol><h3 id="设置Git的默认用户信息（必须）"><a href="#设置Git的默认用户信息（必须）" class="headerlink" title="设置Git的默认用户信息（必须）"></a>设置Git的默认用户信息（必须）</h3><p><span id="id1"></span></p><ol><li><strong>打开 Git Bash</strong></li></ol><ul><li><p>如果你已经成功的安装了 Git 的话，你会找到这个 <code>Git Bash</code> 程序的<br>你可以在在开始菜单中找到此程序<br><img src="/images/Snipaste_2019-03-03_18-25-24.png" alt="在开始菜单中找到程序"></p><p>当然，你也可以在任意位置（桌面、文件资源管理器）通过鼠标右键选择菜单中的 <code>Git Bash Shere</code><br><img src="/images/Snipaste_2019-03-03_18-36-14.png" alt="鼠标右键也可以打开"></p></li></ul><ol start="2"><li><p><strong>执行如下命令</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name '你的英文名'</span><br><span class="line">git config --global user.email '你的邮箱'</span><br></pre></td></tr></table></figure><p><img src="/images/Snipaste_2019-03-03_18-39-43.png" alt="执行命令示意"></p><blockquote><p>为避免后续可能会出现的不必要的麻烦，其中英文名和邮箱，尽量和GitHub上你实际的账号信息保持一致</p></blockquote></li></ol><h1 id="添加SSH-key"><a href="#添加SSH-key" class="headerlink" title="添加SSH key"></a>添加SSH key</h1><blockquote><p>此步骤是让 hexo 在自动部署项目至GitHub时，直接完成部署<br>注意：</p><ul><li>一台电脑有且只需要唯一的一个SSH Key</li><li>一个 SSH key 可以访问你的所有仓库，即使你有 1000000 个仓库，都可以</li></ul></blockquote><p><span id="id2"></span></p><ol><li><p><strong>打开Git Bash</strong><br><a href="#id1">上面已经说过了-点击跳转</a></p></li><li><p><strong>检查本机已存在的ssh密钥</strong><br><code>cd ~/. ssh</code><br>如果提示：<code>No such file or directory</code> 则说明，没有已存在的添加SSH key</p></li><li><p><strong>删除已经存在的SSH Key</strong></p><blockquote><p>如果已有密钥并且并不清楚此密钥在何处使用或配置过，需要重新配置的，那么就执行这一步，删除所有的ssh key，否则请跳过；如果你要执行也没问题，只要确保是复制运行就好</p></blockquote><p>执行 <code>rm -rf ~/.ssh/*</code> 删除所有的ssh key，注意，建议复制运行！ 若多一个空格，可能都需要重装系统了</p></li><li><p><strong>生成ssh key</strong><br>执行 <code>ssh-keygen -t rsa -b 4096 -C &quot;你的邮箱&quot;</code> 注意填写你GitHub绑定的真实邮箱</p></li><li><p><strong>按回车三次</strong><br>执行命令后，它会有一些选项，全部使用默认按回车即可，否则后续可能会出现问题</p></li><li><p><strong>获取生成的密钥串</strong><br>生成成功后会默认在 ~ 目录（系统根目录）下生成一个 .ssh 的隐藏文件夹<br>运行 <code>cat ~/.ssh/id_rsa.pub</code>，得到一串字符，全部复制，一个字符都不能少，有些电脑可能此处需要等待一会儿</p></li><li><p><strong>进入GitHub进行关联配置</strong></p><blockquote><p>此步骤是为了，将你的这台电脑和GitHub进行关联，后续此电脑无论何时何处执行Git操作，都不需要重复输入密码进行验证，如果使用https就会很麻烦，每次操作都需要输入用户名密码进行验证</p></blockquote><p>进入：<a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a><br><img src="/images/Snipaste_2019-03-03_19-33-35.png" alt="进入GitHub ssh key"></p><blockquote><p>如果已经存在的有配置，那么在确认不清楚其用途或与哪台电脑关联的情况下，也可以全部删除</p></blockquote></li><li><p><strong>点击 <code>New SSH key</code></strong><br>按图中所示进行填写，而后点击 <code>Add SSH key</code><br><img src="/images/Snipaste_2019-03-03_19-45-33.png" alt="添加ssh key"></p></li><li><p><strong>与GitHub进行连接</strong></p><ul><li>运行 <code>ssh -T git@github.com</code> 不要改动邮箱，直接复制运行即可</li><li>你可能会看到如下提示“是否确认继续连接”：<br><img src="/images/11017215-930bc23329e6f29e.png" alt="是否确认连接"></li><li>输入 <code>yes</code></li><li>如果看到类似提示 <code>Hi CandyMuj! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code> 那么恭喜你配置成功了</li><li>如果提示 <code>Permission denied (publickey)</code> 或者没有看到如上的成功提示，那么说明你配置失败了，回到第1步重新开始，是的，回到<a href="#id2">第1步</a></li></ul></li><li><p><strong>看到成功提示后，那么就成功的添加了一个 SSH Key了</strong></p></li></ol><p><span id="id3"></span></p><h1 id="安装Hexo插件"><a href="#安装Hexo插件" class="headerlink" title="安装Hexo插件"></a>安装Hexo插件</h1><ol><li><p><strong>打开Git Bash</strong><br><a href="#id1">上面已经说过了-点击跳转</a></p></li><li><p><strong>执行安装命令</strong><br><code>npm install -g hexo-cli</code></p><blockquote><ul><li><code>-g</code> 是安装到全局目录下，如果你之前配置了本博文中的<a href="#id4">自定义Nodejs npm命令下载模块的默认保存路径（可选）</a>，那么请务必加上 <code>-g</code> 选项，否则它依然会安装到默认的目录下</li></ul></blockquote></li><li><p><strong>初始化博客网站</strong><br>选择一个目录用来存储博客文件，而后依次执行如下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir CandyBlog  # 新建目录，此目录必须为空</span><br><span class="line">cd CandyBlog/</span><br><span class="line">hexo init</span><br><span class="line">npm i  # 或 npm install</span><br></pre></td></tr></table></figure></li><li><p><strong>安装插件模块</strong></p><blockquote><p>安装模块时，在博客根目录执行命令，包括以后的所有关于hexo的操作都在博客根目录执行命令操作</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-admin --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-feed --save</span><br><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure></li><li><p><strong>本地预览 - 测试是否成功</strong></p><ul><li>执行命令：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code><blockquote><p>命令解释及更多命令，请参考 <a href="#id6">常用命令</a></p></blockquote></li><li>打开浏览器访问链接：<a href="127.0.0.1:4000" target="_blank" rel="noopener">127.0.0.1:4000</a> 或 <a href="localhost:4000" target="_blank" rel="noopener">localhost:4000</a></li><li>如果能正常访问并且能打开页面，那么就恭喜你，基本成功了，后续再做一些配置就好了<blockquote><p>因为默认本地预览的端口为 4000，若存在占用无法正常使用的情况；或者不想用本地预留地址，官方也支持自定义IP；具体请参考官方文档进行配置 <a href="https://hexo.io/zh-cn/docs/server" target="_blank" rel="noopener">点击访问官方自定义端口或IP的文档</a></p><p><strong>注意：文档前面是安装模块和启动方法，模块上面已经安装了，启动也说了，只需要看如何自定义端口即可，自己灵活一点看文档就好</strong></p></blockquote></li></ul></li></ol><h1 id="配置Hexo插件"><a href="#配置Hexo插件" class="headerlink" title="配置Hexo插件"></a>配置Hexo插件</h1><h2 id="与GitHub关联"><a href="#与GitHub关联" class="headerlink" title="与GitHub关联"></a>与GitHub关联</h2><ol><li><p><strong>在GitHub新建一个空仓库</strong><br><img src="/images/Snipaste_2019-03-03_23-25-19.png" alt="创建一个空仓库"></p></li><li><p><strong>获取仓库SSH链接</strong><br><img src="/images/Snipaste_2019-03-03_23-36-26.png" alt="获取仓库SSH链接"></p></li><li><p><strong>修改根目录下 <code>_config.yml</code> 配置文件</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:CandyMuj/CandyBlog.git</span>  <span class="comment"># 替换为刚刚你复制的SSH链接  其他东西不要更改</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><blockquote><p>关于 <code>_config.yml</code> 配置文件更多的配置跳转至 <a href="#id5">关于hexo的更多配置</a></p></blockquote></li><li><p><strong>上传到github</strong></p><ul><li>执行命令: <code>hexo clean &amp;&amp; hexo g -d</code><blockquote><p>命令解释及更多命令，请参考 <a href="#id6">常用命令</a></p></blockquote></li></ul></li><li><p><strong>上传后查看是否有代码</strong><br>如果成功上传了代码，那么大致应该是这么个样子<br><img src="/images/Snipaste_2019-03-04_00-01-23.png" alt="上传代码后带纸结构"></p></li><li><p><strong>通过 <code>GitHub Pages</code> 实现博客部署，公网访问</strong></p><ul><li><p>点击右上角 <code>Settings</code><br><img src="/images/Snipaste_2019-03-04_00-04-23.png" alt="点击 &#39;Settings&#39;"></p></li><li><p>往下翻，找到 <code>GitHub Pages</code><br><img src="/images/Snipaste_2019-03-04_00-10-47.png" alt="设置 &#39;GitHub Pages&#39;"></p><blockquote><ul><li>页面会自动重新刷新一次，你会得到一个访问链接，我这里是配置了自定义域名的，所以链接可能不一样，一般为 <code>https://用户名.github.io/仓库名</code>，<a href="#id7">跳转至如何自定义域名</a></li><li>访问这个链接，看是否能成功访问；如果之前在本地预览了，看是否如本地预览时一样</li><li>如果成功，那么就基本可以使用了，如果不配置自定义域名，那么可跳过自定义域名配置部分往后看 <a href="#id5">关于hexo的更多配置</a></li></ul></blockquote></li></ul></li></ol><p><span id="id7"></span></p><h2 id="自定义域名及开启HTTPS访问"><a href="#自定义域名及开启HTTPS访问" class="headerlink" title="自定义域名及开启HTTPS访问"></a>自定义域名及开启HTTPS访问</h2><p><span id="id5"></span></p><h2 id="关于hexo的更多配置"><a href="#关于hexo的更多配置" class="headerlink" title="关于hexo的更多配置"></a>关于hexo的更多配置</h2><h1 id="如何新建博文"><a href="#如何新建博文" class="headerlink" title="如何新建博文"></a>如何新建博文</h1><p><span id="id6"></span></p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/zh-cn/download/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;安装就不多说了，到官网下载直接就好了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;针对刚刚安装的两个软件进行一些配置，其中有些配置是可选的&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：后续的一切操作，都是在已经安装上诉两个软件的前提下进行的&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;span id=&quot;id4&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;h3 id=&quot;自定义Nodejs-npm命令下载模块的默认保存路径（可选）&quot;&gt;&lt;a href=&quot;#自定义Nodejs-npm命令下载模块的默认保存路径（可选）&quot; class=&quot;headerlink&quot; title=&quot;自定义Nodejs npm命令下载模块的默认保存路径（可选）&quot;&gt;&lt;/a&gt;自定义Nodejs npm命令下载模块的默认保存路径（可选）&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;因为默认是下载在c盘的，为了避免C盘被滥用，可自定义保存路径，当然也可以不改，只要你愿意&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="默认分类" scheme="https://blog.candymuj.cc/categories/%E9%BB%98%E8%AE%A4%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="默认标签" scheme="https://blog.candymuj.cc/tags/%E9%BB%98%E8%AE%A4%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
</feed>
